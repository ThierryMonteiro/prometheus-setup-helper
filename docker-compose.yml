version: "3.9"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: prometheus-editor-backend
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - ./prometheus.yml:/etc/prometheus.yml
    ports:
      - "8000:8000"
    environment:
      - DEBUG=True
      - DJANGO_ALLOWED_HOSTS=*
    command: >
      sh -c "python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: prometheus-editor-frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
      - "8080:8080"
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend

  prometheus:
    image: prom/prometheus:v2.52.0
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - prometheus-data:/prometheus
      - ./backend/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
    depends_on:
      - backend

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3001:3000"  # Important: avoid port clash with frontend
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

volumes:
  prometheus-data:
  grafana-data:
  prometheus-config:
